// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ORM;

namespace wpfwopdracht5.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ORM.Auto", b =>
                {
                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("VerhuurderEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Brand");

                    b.HasIndex("VerhuurderEmail");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            Brand = "Tesla",
                            VerhuurderEmail = "kevin@gmail.com"
                        },
                        new
                        {
                            Brand = "Volkswagen",
                            VerhuurderEmail = "Wishal@gmail.com"
                        });
                });

            modelBuilder.Entity("ORM.Huurder", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Huurders");

                    b.HasData(
                        new
                        {
                            Email = "huurman@gmail.com",
                            Mobile = "0638952354",
                            Name = "Huurman1"
                        },
                        new
                        {
                            Email = "buurman@gmail.com",
                            Mobile = "063852685",
                            Name = "buurman"
                        });
                });

            modelBuilder.Entity("ORM.Period", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AutoBrand")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("BorrowTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AutoBrand");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("ORM.Verhuurder", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Verhuurders");

                    b.HasData(
                        new
                        {
                            Email = "kevin@gmail.com",
                            Address = "beverstraat 25",
                            Mobile = "063752655",
                            Name = "kevin"
                        },
                        new
                        {
                            Email = "Wishal@gmail.com",
                            Address = "kalrestraat 32",
                            Mobile = "063752652",
                            Name = "Wishal"
                        });
                });

            modelBuilder.Entity("ORM.Auto", b =>
                {
                    b.HasOne("ORM.Verhuurder", "Verhuurder")
                        .WithMany("Autos")
                        .HasForeignKey("VerhuurderEmail");

                    b.Navigation("Verhuurder");
                });

            modelBuilder.Entity("ORM.Period", b =>
                {
                    b.HasOne("ORM.Auto", null)
                        .WithMany("Periods")
                        .HasForeignKey("AutoBrand");
                });

            modelBuilder.Entity("ORM.Auto", b =>
                {
                    b.Navigation("Periods");
                });

            modelBuilder.Entity("ORM.Verhuurder", b =>
                {
                    b.Navigation("Autos");
                });
#pragma warning restore 612, 618
        }
    }
}
